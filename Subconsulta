1 - Consulta para obtener los clientes que tienen un saldo mayor al saldo promedio de todas las cuentas.

SELECT 
    c.ClienteID, 
    c.Nombre + ' ' + c.Apellido AS NombreCliente, 
    a.Saldo
FROM 
    Clientes c
INNER JOIN 
    Cuentas a ON c.ClienteID = a.ClienteID
WHERE 
    a.Saldo > (SELECT AVG(Saldo) FROM Cuentas)
ORDER BY 
    a.Saldo DESC;
----------------------------------------------------------------------------------------------------------
2 - Consulta para obtener los empleados que ganan más que el salario promedio de su sucursal.

SELECT 
    e.EmpleadoID, 
    e.Nombre + ' ' + e.Apellido AS NombreEmpleado, 
    e.Salario, 
    s.Nombre AS NombreSucursal
FROM 
    Empleados e
INNER JOIN 
    Sucursales s ON e.SucursalID = s.SucursalID
WHERE 
    e.Salario > (SELECT AVG(Salario) 
                 FROM Empleados 
                 WHERE SucursalID = e.SucursalID)
ORDER BY 
    e.Salario DESC;
----------------------------------------------------------------------------------------------------------
3 - Listar las cuentas con saldo mayor que el saldo promedio de las cuentas del mismo tipo.

SELECT 
    a.CuentaID, 
    a.TipoCuenta, 
    a.Saldo, 
    c.Nombre + ' ' + c.Apellido AS NombreCliente
FROM 
    Cuentas a
INNER JOIN 
    Clientes c ON a.ClienteID = c.ClienteID
WHERE 
    a.Saldo > (SELECT AVG(Saldo) 
               FROM Cuentas 
               WHERE TipoCuenta = a.TipoCuenta)
ORDER BY 
    a.Saldo DESC;
----------------------------------------------------------------------------------------------------------
4 - Clientes que tienen un préstamo con un monto superior al promedio de todos los préstamos y 
además han realizado al menos un pago en los últimos 30 días.

SELECT 
    c.ClienteID, 
    c.Nombre + ' ' + c.Apellido AS NombreCliente, 
    p.MontoPrestamo, 
    MAX(pa.FechaPago) AS UltimoPago
FROM 
    Clientes c
INNER JOIN 
    Prestamos p ON c.ClienteID = p.ClienteID
INNER JOIN 
    PagosPrestamo pa ON p.PrestamoID = pa.PrestamoID
WHERE 
    p.MontoPrestamo > (SELECT AVG(MontoPrestamo) FROM Prestamos)
    AND pa.FechaPago >= DATEADD(DAY, -30, GETDATE())
GROUP BY 
    c.ClienteID, c.Nombre, c.Apellido, p.MontoPrestamo
ORDER BY 
    p.MontoPrestamo DESC;

----------------------------------------------------------------------------------------------------------

5 - Cuentas cuyo saldo es mayor que el saldo promedio de todas las cuentas y la fecha de creación más reciente.

SELECT 
    a.CuentaID, 
    a.Saldo, 
    a.FechaCreacion
FROM 
    Cuentas a
WHERE 
    a.Saldo > (SELECT AVG(Saldo) FROM Cuentas)
ORDER BY 
    a.FechaCreacion DESC;

----------------------------------------------------------------------------------------------------------

6 - Obtener los empleados que tienen un salario mayor al promedio de todos los empleados de la misma sucursal, 
junto con la fecha de contratación más reciente de cada empleado.

SELECT 
    e.EmpleadoID, 
    e.Nombre + ' ' + e.Apellido AS NombreEmpleado, 
    e.Salario, 
    e.FechaContratacion, 
    s.Nombre AS NombreSucursal
FROM 
    Empleados e
INNER JOIN 
    Sucursales s ON e.SucursalID = s.SucursalID
WHERE 
    e.Salario > (SELECT AVG(Salario) 
                 FROM Empleados 
                 WHERE SucursalID = e.SucursalID)
ORDER BY 
    e.FechaContratacion DESC;

----------------------------------------------------------------------------------------------------------

7 - Clientes que tienen más de una cuenta y cuyo saldo total en todas sus cuentas es mayor al saldo promedio de todos los clientes.

SELECT 
    c.ClienteID, 
    c.Nombre + ' ' + c.Apellido AS NombreCliente, 
    COUNT(a.CuentaID) AS NumeroCuentas, 
    SUM(a.Saldo) AS SaldoTotal
FROM 
    Clientes c
INNER JOIN 
    Cuentas a ON c.ClienteID = a.ClienteID
GROUP BY 
    c.ClienteID, c.Nombre, c.Apellido
HAVING 
    COUNT(a.CuentaID) > 1
    AND SUM(a.Saldo) > (SELECT AVG(SaldoTotal) 
                         FROM (SELECT SUM(Saldo) AS SaldoTotal 
                               FROM Cuentas 
                               GROUP BY ClienteID) AS Subquery)
ORDER BY 
    SaldoTotal DESC;

----------------------------------------------------------------------------------------------------------

8 - Sucursales que tienen más empleados que el promedio de empleados por sucursal.

SELECT 
    e.SucursalID AS Sucursal,
    COUNT(e.EmpleadoID) AS NumeroEmpleados
FROM 
    Empleados e
GROUP BY 
    e.SucursalID
HAVING 
    COUNT(e.EmpleadoID) > (SELECT AVG(NumeroEmpleados) 
                           FROM (SELECT COUNT(EmpleadoID) AS NumeroEmpleados 
                                 FROM Empleados 
                                 GROUP BY SucursalID) AS Subquery)
ORDER BY 
    NumeroEmpleados DESC;

----------------------------------------------------------------------------------------------------------

9 - Muestre el nombre completo de los clientes y el saldo de sus cuentas, 
pero solo para aquellas cuentas cuyo saldo sea mayor que el promedio de saldo de todas las cuentas que tiene el mismo cliente. 
Ordena los resultados por saldo de cuenta en orden descendente.

SELECT 
    Clientes.Nombre + ' ' + Clientes.Apellido AS NombreCompleto,
    Cuentas.Saldo AS SaldoCuenta
FROM 
    Clientes
JOIN 
    Cuentas ON Clientes.ClienteID = Cuentas.ClienteID
WHERE 
    Cuentas.Saldo > (SELECT AVG(Saldo) 
                     FROM Cuentas 
                     WHERE ClienteID = Clientes.ClienteID)
ORDER BY 
    SaldoCuenta DESC;

----------------------------------------------------------------------------------------------------------
10 - Nombre completo de los empleados, su salario y el nombre del departamento al que pertenecen, 
pero solo para aquellos empleados cuyo salario sea mayor que el salario promedio de todos los empleados que trabajan en el mismo departamento. 
Además, muestra solo a aquellos empleados que llevan más de 5 años trabajando en la empresa. 
Ordena los resultados por el salario en orden descendente.

SELECT 
    e.Nombre + ' ' + e.Apellido AS NombreCompleto,
    e.Salario AS Salario,
    d.Nombre AS Departamento
FROM 
    Empleados e
JOIN 
    Departamentos d ON e.DepartamentoID = d.DepartamentoID
WHERE 
    e.Salario > (SELECT AVG(Salario) 
                 FROM Empleados 
                 WHERE DepartamentoID = e.DepartamentoID)
AND 
    DATEDIFF(YEAR, e.FechaContratacion, GETDATE()) > 5
ORDER BY 
    e.Salario DESC;










